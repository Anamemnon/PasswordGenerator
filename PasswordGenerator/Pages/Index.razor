@page "/"
@using System.Text

<PageTitle>Index</PageTitle>

<h1>Generate your password</h1>

<label for="inputPasswordLength">Password Length: </label>
<input type="number" @bind-value="passwordLength" min="@minPasswordLength" max="@maxPasswordLength" name="inputPasswordLength"></input>

<label for="inputPasswordsCount">Count of passwords: </label>
<input type="number" @bind-value="passwordsCount" min="@minPasswordsCount" max="@maxPasswordsCount" name="inputPasswordsCount"></input>

@foreach (var password in passwords)
{
    <p role="status">Password: @password</p>
}

<button class="btn btn-primary" @onclick="GeneratePasswords">Generate password</button>

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    private const int minPasswordLength = 6;
    private const int maxPasswordLength = 64;
    private const int maxPasswordsCount = 10;
    private const int minPasswordsCount = 1;


    private int passwordLength { get; set; } = minPasswordLength;
    private int passwordsCount { get; set; } = minPasswordsCount;
    private string[] passwords;

    public Index()
    {
        this.passwords = new string[minPasswordsCount];
    }

    private void GeneratePasswords()
    {
        this.passwords = new string[passwordsCount];

        for (int i = 0; i < passwordsCount; i++)
        {
            StringBuilder tempPassword = new(passwordLength);

            for (int j = 0; j < passwordLength; j++)
            {
                tempPassword.Append(randomCharacter());
            }

            passwords[i] = tempPassword.ToString();
        }
        
    }

    private char randomCharacter()
    {
        char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
        char[] specical = @"`~!@#$%^&*()_+-={}[];:'|\/".ToCharArray();

        Random r = new Random();

        var collectionChoice = r.NextInt64(0, 2);

        char randomChar = collectionChoice switch {
            0 => alpha[r.NextInt64(0, alpha.Length - 1)],
            1 => specical[r.NextInt64(0, specical.Length - 1)],
            2 => (char) ('0' | r.NextInt64(0, 10)),
            _ => ' '
        };

        return randomChar;
    }
}
